<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sp_player</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>spd</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>5</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_check">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.checks_gotten</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>global.checks_gotten + 1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="5" enumb="87">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (collision_point(x - sprite_width / 2 + 1, y - sprite_height / 2 - spd, obj_floor, false, true) and
    collision_point(x + sprite_width / 2 - 1, y - sprite_height / 2 - spd, obj_floor, false, true))
    y -= spd;
else if (collision_point(x - sprite_width / 2 + 1, y - sprite_height / 2 - 1, obj_floor, false, true) and
    collision_point(x + sprite_width / 2 - 1, y - sprite_height / 2 - 1, obj_floor, false, true))
    y -= 1; // move in smallest increment if player goes over by moving with "spd"
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="83">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (collision_point(x - sprite_width / 2 + 1, y + sprite_height / 2 + spd, obj_floor, false, true) and
    collision_point(x + sprite_width / 2 - 1, y + sprite_height / 2 + spd, obj_floor, false, true))
    y += spd;
else if (collision_point(x - sprite_width / 2 + 1, y + sprite_height / 2, obj_floor, false, true) and
    collision_point(x + sprite_width / 2 - 1, y + sprite_height / 2, obj_floor, false, true))
    y += 1; // move in smallest increment if player goes over by moving with "spd"
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="68">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (collision_point(x + sprite_width / 2 + spd, y - sprite_height / 2 + 1, obj_floor, false, true) and
    collision_point(x + sprite_width / 2 + spd, y + sprite_height / 2 - 1, obj_floor, false, true))
    x += spd;
else if (collision_point(x + sprite_width / 2, y - sprite_height / 2 + 1, obj_floor, false, true) and
    collision_point(x + sprite_width / 2, y + sprite_height / 2 - 1, obj_floor, false, true))
    x += 1; // move in smallest increment if player goes over by moving with "spd"
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="65">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (collision_point(x - sprite_width / 2 - spd, y - sprite_height / 2 + 1, obj_floor, false, true) and
    collision_point(x - sprite_width / 2 - spd, y + sprite_height / 2 - 1, obj_floor, false, true))
    x -= spd;
else if (collision_point(x - sprite_width / 2 - 1, y - sprite_height / 2 + 1, obj_floor, false, true) and
    collision_point(x - sprite_width / 2 - 1, y + sprite_height / 2 - 1, obj_floor, false, true))
    x -= 1; // move in smallest increment if player goes over by moving with "spd"
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
